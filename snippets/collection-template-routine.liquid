{% comment %}
Collection template, used on collection.liquid and collection.image.liquid
{% endcomment %}

{% paginate collection.products by 12 %}
<div class="col-routine-section-outer"   {% if section.settings.bg_image!=blank %}style="background-image:url('{{ section.settings.bg_image | img_url: 'original' }}')"{% endif %}>
  <div class="col-routine-section">
  <header class="section-header text-center">
    <h1>
      {% comment %} {{ collection.title }} {% endcomment %}
      BEAUTIFUL SKIN <span> Routine Finder</span></h1>
    {% if collection.description != blank %}
    <div class="grid">
      <div class="grid__item">
        <div class="rte">
          {{ collection.description }}
        </div>
      </div>
    </div>
    {% endif %}

    <div class="grid--full collection-sorting{% if section.settings.collection_sort_enable %} collection-sorting--enabled{% endif %}">
      {% if section.settings.collection_sort_enable %}
      {% include 'collection-sorting' %}
      {% endif %}
    </div>

    {% if section.settings.collection_tags_enable %}
    {% if collection.all_tags.size > 0 %}
    {% if section.settings.collection_sort_enable %}
    <hr class="hr--small">
    {% endif %}
    {% comment %}
    To provide a 'catch-all' link at the top of the list,
    check against the collection.handle, product type, and vendor.
    {% endcomment %}
    <ul class="tags tags--collection inline-list">
      <li{% unless current_tags %} class="tag--active"{% endunless %}>
        {% comment %}
        Good for /collections/all collection and regular collections
        {% endcomment %}
        {% if collection.handle %}
        <a href="/collections/{{ collection.handle }}">
          {{ 'collections.general.all_of_collection' | t }}
        </a>

        {% comment %}
        Good for automatic type collections
        {% endcomment %}
        {% elsif collection.current_type %}
        <a href="{{ collection.current_type | url_for_type }}">
          {{ 'collections.general.all_of_collection' | t }}
        </a>

        {% comment %}
        Good for automatic vendor collections
        {% endcomment %}
        {% elsif collection.current_vendor %}
        <a href="{{ collection.current_vendor | url_for_vendor }}">
          {{ 'collections.general.all_of_collection' | t }}
        </a>
        {% endif %}
      </li>

      {% for tag in collection.all_tags %}
      {% if current_tags contains tag %}
      <li class="tag--active">
        {{ tag | link_to_remove_tag: tag }}
      </li>
      {% else %}
      <li>
        {% comment %}
        Use link_to_add_tag if you want to allow filtering
        by multiple tags
        {% endcomment %}
        {{ tag | link_to_tag: tag }}
      </li>
      {% endif %}
      {% endfor %}
    </ul>
    {% endif %}
    {% endif %}

    {% if section.settings.collection_tags_enable %}
    <hr class="hr--small hr--clear">
    {% endif %}
  </header>

  {% if section.settings.collection_products_grid == 'collage' %}
  <div class="grid grid-collage">
    {% comment %}
    Loop through our products in the current collection.
    See the snippet 'snippets/product-grid-collage.liquid'.

    `is_reverse_row__product`, `three_row_index__product`, `collection_product_count`, and `divisible_by_three__product` are
    all used by 'snippets/product-grid-collage.liquid'
    {% endcomment %}
    {% assign is_reverse_row__product = false %}
    {% assign three_row_index__product = 0 %}
    {% assign collection_product_count__product = collection.products.size %}
    {% assign divisible_by_three__product = collection_product_count__product | modulo:3 %}
    {% for product in collection.products %}
    {% include 'product-grid-collage' %}
    {% else %}

    {% if shop.products_count == 0 %}
    {% comment %}
    Add default products to help with onboarding for collections/all only
    {% endcomment %}
    {% include 'onboarding-featured-products' %}
    {% else %}
    {% comment %}
    If collection exists but is empty, display message
    {% endcomment %}
    <div class="grid__item text-center">
      <p>{{ 'collections.general.no_matches' | t }}</p>
    </div>
    {% endif %}
    {% endfor %}

  </div>
  {% elsif section.settings.collection_products_grid == 'grid' %}
  <div class="form-container-inner">
    <div class="form-line-1">
    <div class="label-text">I'm</div> 
    <div class="drop-options">
      <select class="coll-filter age">
        <option value="0">Age</option>
        {% for tag in collection.all_tags %}
        {% if section.settings.age!= blank %}
        {% assign age = section.settings.age | split: ',' %}
        {% assign count = age | size %}

        {% for i in (0..count) %}
        {% if tag == age[i] %}
        <option value="{{tag}}">{{tag}}</option>
        {% endif %}
        {%endfor%}
        {% endif %}
        {% endfor %}
      </select>
    </div>
    <div class="label-text">years old with</div> 
    <div class="drop-options">
      <select class="coll-filter skin_type">
        <option value="0">Skin Type</option>
        {% for tag in collection.all_tags %}
        {% if section.settings.skin_type!= blank %}
        {% assign skin_type = section.settings.skin_type | split: ',' %}
        {% assign count = skin_type | size %}

        {% for i in (0..count) %}
        {% if tag == skin_type[i] %}
        <option value="{{tag}}">{{tag  | replace: '-', ' '}}</option>
        {% endif %}
        {%endfor%}
        {% endif %}
        {% endfor %}
      </select>
      </div>
      <div class="label-text">skin.</div>
    </div>
    <div class="form-line-2">
    <div class="label-text"> My skincare concern is</div> 
    <div class="drop-options">
      <select class="coll-filter skin_concern">
        <option value="0"> Skin Concern</option>
        {% for tag in collection.all_tags %}
        {% if section.settings.skin_concern!= blank %}
        {% assign skin_concern = section.settings.skin_concern | split: ',' %}
        {% assign count = skin_concern | size %}
        {% for i in (0..count) %}
        {% if tag == skin_concern[i] %}
        <option value="{{tag}}">{{tag | replace: '-', ' '}}</option>
        {% endif %}
        {%endfor%}
        {% endif %}
        {% endfor %}
      </select>
    </div>
    <div class="label-text">.</div> 
      </div>
    <div class="text-center">
      <button id="fliter-btn" disabled="true" class="btn">FIND MY ROUTINE</button>
    </div>
  </div>
</div>
</div>
<div class="wrapper">
<div class="grid show-product">

  {% assign grid_item_width = 'medium--one-half large--one-third' %}
  {% assign count = 0 %}
  {% for product in collection.products %}
  {% assign count = count | plus: 1 %}
  {% if count == 1%}
  <div class="routine-header text-center">
  <h5>YOUR RECOMMENDED ROUTINE <button class="bundle right">ADD ALL TO BAG</button></h5>
  
  </div>
  {% endif %}
  {% include 'product-grid-item-routine' %}
  {% else %}
  {% if collection.handle == 'all' %}
  {% comment %}
  Add default products to help with onboarding for collections/all only
  {% endcomment %}
  {% include 'onboarding-featured-products' %}
  {% else %}
  {% comment %}
  If collection exists but is empty, display message
  {% endcomment %}
  <div class="grid__item text-center">
    <p>{{ 'collections.general.no_matches' | t }}</p>
  </div>
  {% endif %}
  {% endfor %}
</div>
</div>
{% endif %}

{% if paginate.pages > 1 %}
{% include 'pagination' %}
{% endif %}

{% endpaginate %}
<script>
  var age=false,skin_type=false,skin_concern=false;var id;
  var collFilters = $('.coll-filter');
  var newTags = [];
  var str = window.location.href;
  var rest = str.substring(str.lastIndexOf("/") + 1, str.length); //fetching tags from url
  var tags = rest.split("+");
  if(tags.length) //checking tags on load
  { 
    var check_tag=false;
    for(var i=0;i<tags.length;i++)
    {
      $('.coll-filter option').each(function(){
        if ($(this).val() == tags[i]) {
          $(this).attr("selected","selected");
          check_tag=true;
        }
        if(check_tag)
        {
          $(".coll-filter option[value='0']").hide(); //hiding tags that have 0 value
          $('#fliter-btn').prop('disabled',false); //active button on load if value !=0;


        }
      });
    }
  }
  collFilters.change(function(){
    $(this).find("option[value='0']").hide(); //hiding option 0 on change 

  })

  $('.age').change(function(){
    if($(this).val()!=0)
    {
      age=true;
      if(age && skin_type && skin_concern)
      {
        $('#fliter-btn').prop('disabled',false);
      }
    }
  })
  $('.skin_type').change(function(){
    if($(this).val()!=0)
    {
      skin_type=true;
    }
    if(age && skin_type && skin_concern)
    {
      $('#fliter-btn').prop('disabled',false);
    }
  })
  $('.skin_concern').change(function(){
    if($(this).val()!=0)
    {
      skin_concern=true;
    }
    if(age && skin_type && skin_concern)
    {
      $('#fliter-btn').prop('disabled',false);
    }
  })

  $('#fliter-btn').click(function(){
    collFilters.each(function() {
      if ($(this).val()) {
        newTags.push($(this).val());
      }
    });
    if (newTags.length) {
      var query = newTags.join('+');
      window.location.href = jQuery('{{ 'tag' | link_to_tag: 'tag' }}').attr('href').replace('/' + 'tag', '/' + query);
                                    }
                                    else {
                                    {% if collection.handle %}
                                    window.location.href = '/collections/{{ collection.handle }}';
                                    {% elsif collection.products.first.type == collection.title %}
                                    window.location.href = '{{ collection.title | url_for_type }}';
                                    {% elsif collection.products.first.vendor == collection.title %}
                                    window.location.href = '{{ collection.title | url_for_vendor }}';
                                    {% endif %}
                                    }
                                    })
      /*Add to bag button*/
      function addToBag() {
        $.ajax({
          type: 'POST',
          url: '/cart/add.js',
          dataType: 'json',
          data: $('form[action="/cart/add"]').serialize(),
          success: function () 
          {
            window.location.href='/cart';
          },
          error: Shopify.onError
        });
      }
      var a=40;
      $(".bundle").click(function(){

        setTimeout(function(){     
          addToBag();
        },a);
        a++;
      });
      function addItem(form_id) {
        $.ajax({
          type: 'POST',
          url: '/cart/add.js',
          dataType: 'json',
          data: $('#'+form_id).serialize(),

          error: Shopify.onError
        });
      }

      $(".addtocart").click(function(e){
        var elem = $(this);   

        var itemcode = 'add-item-'+ jQuery(this).attr('id');
        addItem(itemcode);
      });
</script>